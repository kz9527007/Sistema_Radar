<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classgr_1_1radar_1_1print__results" kind="class" language="C++" prot="public">
    <compoundname>gr::radar::print_results</compoundname>
    <basecompoundref prot="public" virt="virtual">block</basecompoundref>
    <derivedcompoundref refid="classgr_1_1radar_1_1print__results__impl" prot="public" virt="non-virtual">gr::radar::print_results_impl</derivedcompoundref>
    <includes refid="print__results_8h" local="no">print_results.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1radar_1_1print__results_1af480e9c32ea6e1bf203a5ee5ae2d0348" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1radar_1_1print__results" kindref="compound">print_results</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;print_results&gt; gr::radar::print_results::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/parallels/gr-radar/include/radar/print_results.h" line="42" column="1" bodyfile="/home/parallels/gr-radar/include/radar/print_results.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1radar_1_1print__results_1ae9effa9273b962baf9a62053e2367513" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1radar_1_1print__results_1af480e9c32ea6e1bf203a5ee5ae2d0348" kindref="member">sptr</ref></type>
        <definition>static sptr gr::radar::print_results::make</definition>
        <argsstring>(bool store_msg=false, const std::string filename=&quot;&quot;)</argsstring>
        <name>make</name>
        <param>
          <type>bool</type>
          <declname>store_msg</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const std::string</type>
          <declname>filename</declname>
          <defval>&quot;&quot;</defval>
        </param>
        <briefdescription>
<para>Return a shared_ptr to a new instance of <ref refid="classgr_1_1radar_1_1print__results" kindref="compound">radar::print_results</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>To avoid accidental use of raw pointers, <ref refid="classgr_1_1radar_1_1print__results" kindref="compound">radar::print_results</ref>&apos;s constructor is in a private implementation class. <ref refid="classgr_1_1radar_1_1print__results_1ae9effa9273b962baf9a62053e2367513" kindref="member">radar::print_results::make</ref> is the public interface for creating new instances. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/parallels/gr-radar/include/radar/print_results.h" line="52" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This block prints data of messages filled with data of the structure [ [[symbol_0],[data_0]], [[symbol_1],[data_1]], ...] on the command line. Only data of the datatypes f32vector and long, and rx_time tuples are displayed. The output can also be stored in a text file. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>store_msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Toggle save output to file </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filename</parametername>
</parameternamelist>
<parameterdescription>
<para>Filename of the output file </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="183">
        <label>gr::radar::print_results</label>
        <link refid="classgr_1_1radar_1_1print__results"/>
        <childnode refid="184" relation="public-inheritance">
        </childnode>
      </node>
      <node id="184">
        <label>block</label>
      </node>
      <node id="185">
        <label>gr::radar::print_results_impl</label>
        <link refid="classgr_1_1radar_1_1print__results__impl"/>
        <childnode refid="183" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="186">
        <label>gr::radar::print_results</label>
        <link refid="classgr_1_1radar_1_1print__results"/>
        <childnode refid="187" relation="public-inheritance">
        </childnode>
      </node>
      <node id="187">
        <label>block</label>
      </node>
    </collaborationgraph>
    <location file="/home/parallels/gr-radar/include/radar/print_results.h" line="40" column="1" bodyfile="/home/parallels/gr-radar/include/radar/print_results.h" bodystart="39" bodyend="53"/>
    <listofallmembers>
      <member refid="classgr_1_1radar_1_1print__results_1ae9effa9273b962baf9a62053e2367513" prot="public" virt="non-virtual"><scope>gr::radar::print_results</scope><name>make</name></member>
      <member refid="classgr_1_1radar_1_1print__results_1af480e9c32ea6e1bf203a5ee5ae2d0348" prot="public" virt="non-virtual"><scope>gr::radar::print_results</scope><name>sptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
