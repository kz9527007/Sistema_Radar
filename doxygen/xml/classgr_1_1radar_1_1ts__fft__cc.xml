<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classgr_1_1radar_1_1ts__fft__cc" kind="class" language="C++" prot="public">
    <compoundname>gr::radar::ts_fft_cc</compoundname>
    <basecompoundref prot="public" virt="virtual">tagged_stream_block</basecompoundref>
    <derivedcompoundref refid="classgr_1_1radar_1_1ts__fft__cc__impl" prot="public" virt="non-virtual">gr::radar::ts_fft_cc_impl</derivedcompoundref>
    <includes refid="ts__fft__cc_8h" local="no">ts_fft_cc.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1radar_1_1ts__fft__cc_1a23f2fcddadd9a26d698ecb4ed3fa74e8" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1radar_1_1ts__fft__cc" kindref="compound">ts_fft_cc</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;ts_fft_cc&gt; gr::radar::ts_fft_cc::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/parallels/gr-radar/include/radar/ts_fft_cc.h" line="42" column="1" bodyfile="/home/parallels/gr-radar/include/radar/ts_fft_cc.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1radar_1_1ts__fft__cc_1a3eec0a171fdde85795ea7e2aa9979902" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1radar_1_1ts__fft__cc_1a23f2fcddadd9a26d698ecb4ed3fa74e8" kindref="member">sptr</ref></type>
        <definition>static sptr gr::radar::ts_fft_cc::make</definition>
        <argsstring>(int packet_len, const std::string &amp;len_key=&quot;packet_len&quot;)</argsstring>
        <name>make</name>
        <param>
          <type>int</type>
          <declname>packet_len</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>len_key</declname>
          <defval>&quot;packet_len&quot;</defval>
        </param>
        <briefdescription>
<para>Return a shared_ptr to a new instance of <ref refid="classgr_1_1radar_1_1ts__fft__cc" kindref="compound">radar::ts_fft_cc</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>To avoid accidental use of raw pointers, <ref refid="classgr_1_1radar_1_1ts__fft__cc" kindref="compound">radar::ts_fft_cc</ref>&apos;s constructor is in a private implementation class. <ref refid="classgr_1_1radar_1_1ts__fft__cc_1a3eec0a171fdde85795ea7e2aa9979902" kindref="member">radar::ts_fft_cc::make</ref> is the public interface for creating new instances. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/parallels/gr-radar/include/radar/ts_fft_cc.h" line="52" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This blocks takes a tagged stream and returns a FFT of the length of the input stream. The output is NOT normalized on the number of input items and no window is used. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>packet_len</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet length of tagged stream </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len_key</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet length key for tagged stream </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="391">
        <label>gr::radar::ts_fft_cc</label>
        <link refid="classgr_1_1radar_1_1ts__fft__cc"/>
        <childnode refid="392" relation="public-inheritance">
        </childnode>
      </node>
      <node id="392">
        <label>gr::tagged_stream_block</label>
      </node>
      <node id="393">
        <label>gr::radar::ts_fft_cc_impl</label>
        <link refid="classgr_1_1radar_1_1ts__fft__cc__impl"/>
        <childnode refid="391" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="394">
        <label>gr::radar::ts_fft_cc</label>
        <link refid="classgr_1_1radar_1_1ts__fft__cc"/>
        <childnode refid="395" relation="public-inheritance">
        </childnode>
      </node>
      <node id="395">
        <label>gr::tagged_stream_block</label>
      </node>
    </collaborationgraph>
    <location file="/home/parallels/gr-radar/include/radar/ts_fft_cc.h" line="40" column="1" bodyfile="/home/parallels/gr-radar/include/radar/ts_fft_cc.h" bodystart="39" bodyend="53"/>
    <listofallmembers>
      <member refid="classgr_1_1radar_1_1ts__fft__cc_1a3eec0a171fdde85795ea7e2aa9979902" prot="public" virt="non-virtual"><scope>gr::radar::ts_fft_cc</scope><name>make</name></member>
      <member refid="classgr_1_1radar_1_1ts__fft__cc_1a23f2fcddadd9a26d698ecb4ed3fa74e8" prot="public" virt="non-virtual"><scope>gr::radar::ts_fft_cc</scope><name>sptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
