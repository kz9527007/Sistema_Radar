<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classgr_1_1radar_1_1split__cc" kind="class" language="C++" prot="public">
    <compoundname>gr::radar::split_cc</compoundname>
    <basecompoundref prot="public" virt="virtual">tagged_stream_block</basecompoundref>
    <derivedcompoundref refid="classgr_1_1radar_1_1split__cc__impl" prot="public" virt="non-virtual">gr::radar::split_cc_impl</derivedcompoundref>
    <includes refid="split__cc_8h" local="no">split_cc.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1radar_1_1split__cc_1a3fc8e876750f0f4069af1b8d154f21b7" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1radar_1_1split__cc" kindref="compound">split_cc</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;split_cc&gt; gr::radar::split_cc::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/parallels/gr-radar/include/radar/split_cc.h" line="43" column="1" bodyfile="/home/parallels/gr-radar/include/radar/split_cc.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1radar_1_1split__cc_1a2dbdccada2397c19ae4dab2c3d8fa98b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1radar_1_1split__cc_1a3fc8e876750f0f4069af1b8d154f21b7" kindref="member">sptr</ref></type>
        <definition>static sptr gr::radar::split_cc::make</definition>
        <argsstring>(int packet_num, const std::vector&lt; int &gt; packet_parts, const std::string &amp;len_key=&quot;packet_len&quot;)</argsstring>
        <name>make</name>
        <param>
          <type>int</type>
          <declname>packet_num</declname>
        </param>
        <param>
          <type>const std::vector&lt; int &gt;</type>
          <declname>packet_parts</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>len_key</declname>
          <defval>&quot;packet_len&quot;</defval>
        </param>
        <briefdescription>
<para>Return a shared_ptr to a new instance of <ref refid="classgr_1_1radar_1_1split__cc" kindref="compound">radar::split_cc</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>To avoid accidental use of raw pointers, <ref refid="classgr_1_1radar_1_1split__cc" kindref="compound">radar::split_cc</ref>&apos;s constructor is in a private implementation class. <ref refid="classgr_1_1radar_1_1split__cc_1a2dbdccada2397c19ae4dab2c3d8fa98b" kindref="member">radar::split_cc::make</ref> is the public interface for creating new instances. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/parallels/gr-radar/include/radar/split_cc.h" line="53" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This block splits a tagged stream into segments. As packet_parts you give the structure of the packet, e.g. (10, 20, 5). With the packet number you can choose which packet shall be pushed to output. Counting begins on zero. E.g. packet_num=1 returns 20 items. </para>    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>packet_num</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of packet to push to output </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>packet_parts</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet structure as vector of packet length </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>len_key</parametername>
</parameternamelist>
<parameterdescription>
<para>Packet length key for tagged stream </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>    </detaileddescription>
    <inheritancegraph>
      <node id="304">
        <label>gr::radar::split_cc</label>
        <link refid="classgr_1_1radar_1_1split__cc"/>
        <childnode refid="305" relation="public-inheritance">
        </childnode>
      </node>
      <node id="305">
        <label>tagged_stream_block</label>
      </node>
      <node id="306">
        <label>gr::radar::split_cc_impl</label>
        <link refid="classgr_1_1radar_1_1split__cc__impl"/>
        <childnode refid="304" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="307">
        <label>gr::radar::split_cc</label>
        <link refid="classgr_1_1radar_1_1split__cc"/>
        <childnode refid="308" relation="public-inheritance">
        </childnode>
      </node>
      <node id="308">
        <label>tagged_stream_block</label>
      </node>
    </collaborationgraph>
    <location file="/home/parallels/gr-radar/include/radar/split_cc.h" line="41" column="1" bodyfile="/home/parallels/gr-radar/include/radar/split_cc.h" bodystart="40" bodyend="54"/>
    <listofallmembers>
      <member refid="classgr_1_1radar_1_1split__cc_1a2dbdccada2397c19ae4dab2c3d8fa98b" prot="public" virt="non-virtual"><scope>gr::radar::split_cc</scope><name>make</name></member>
      <member refid="classgr_1_1radar_1_1split__cc_1a3fc8e876750f0f4069af1b8d154f21b7" prot="public" virt="non-virtual"><scope>gr::radar::split_cc</scope><name>sptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
