<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classgr_1_1radar_1_1usrp__echotimer__cc" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>gr::radar::usrp_echotimer_cc</compoundname>
    <basecompoundref prot="public" virt="virtual">tagged_stream_block</basecompoundref>
    <derivedcompoundref refid="classgr_1_1radar_1_1usrp__echotimer__cc__impl" prot="public" virt="non-virtual">gr::radar::usrp_echotimer_cc_impl</derivedcompoundref>
    <includes refid="usrp__echotimer__cc_8h" local="no">usrp_echotimer_cc.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classgr_1_1radar_1_1usrp__echotimer__cc_1aaa38e631afb34a7c84aedfa9a5c2f50f" prot="public" static="no">
        <type>boost::shared_ptr&lt; <ref refid="classgr_1_1radar_1_1usrp__echotimer__cc" kindref="compound">usrp_echotimer_cc</ref> &gt;</type>
        <definition>typedef boost::shared_ptr&lt;usrp_echotimer_cc&gt; gr::radar::usrp_echotimer_cc::sptr</definition>
        <argsstring></argsstring>
        <name>sptr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/parallels/gr-radar/include/radar/usrp_echotimer_cc.h" line="38" column="1" bodyfile="/home/parallels/gr-radar/include/radar/usrp_echotimer_cc.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classgr_1_1radar_1_1usrp__echotimer__cc_1af28724f82fe8b26282583d7c99f2c059" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classgr_1_1radar_1_1usrp__echotimer__cc_1aaa38e631afb34a7c84aedfa9a5c2f50f" kindref="member">sptr</ref></type>
        <definition>static sptr gr::radar::usrp_echotimer_cc::make</definition>
        <argsstring>(int samp_rate, float center_freq, int num_delay_samps, std::string args_tx, std::string wire_tx, std::string clock_source_tx, std::string time_source_tx, std::string antenna_tx, float gain_tx, float timeout_tx, float wait_tx, float lo_offset_tx, std::string args_rx, std::string wire_rx, std::string clock_source_rx, std::string time_source_rx, std::string antenna_rx, float gain_rx, float timeout_rx, float wait_rx, float lo_offset_rx, const std::string &amp;len_key=&quot;packet_len&quot;)</argsstring>
        <name>make</name>
        <param>
          <type>int</type>
          <declname>samp_rate</declname>
        </param>
        <param>
          <type>float</type>
          <declname>center_freq</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_delay_samps</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>args_tx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>wire_tx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>clock_source_tx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>time_source_tx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>antenna_tx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>gain_tx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>timeout_tx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>wait_tx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>lo_offset_tx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>args_rx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>wire_rx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>clock_source_rx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>time_source_rx</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>antenna_rx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>gain_rx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>timeout_rx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>wait_rx</declname>
        </param>
        <param>
          <type>float</type>
          <declname>lo_offset_rx</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>len_key</declname>
          <defval>&quot;packet_len&quot;</defval>
        </param>
        <briefdescription>
<para>Return a shared_ptr to a new instance of <ref refid="classgr_1_1radar_1_1usrp__echotimer__cc" kindref="compound">radar::usrp_echotimer_cc</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>To avoid accidental use of raw pointers, <ref refid="classgr_1_1radar_1_1usrp__echotimer__cc" kindref="compound">radar::usrp_echotimer_cc</ref>&apos;s constructor is in a private implementation class. <ref refid="classgr_1_1radar_1_1usrp__echotimer__cc_1af28724f82fe8b26282583d7c99f2c059" kindref="member">radar::usrp_echotimer_cc::make</ref> is the public interface for creating new instances. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/parallels/gr-radar/include/radar/usrp_echotimer_cc.h" line="48" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classgr_1_1radar_1_1usrp__echotimer__cc_1af029bf7193437c2d689058747eeb9230" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::radar::usrp_echotimer_cc::set_num_delay_samps</definition>
        <argsstring>(int num_samps)=0</argsstring>
        <name>set_num_delay_samps</name>
        <reimplementedby refid="classgr_1_1radar_1_1usrp__echotimer__cc__impl_1a11b5d6d6ae3a4de9c09ec94c7d98c60e">set_num_delay_samps</reimplementedby>
        <param>
          <type>int</type>
          <declname>num_samps</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/parallels/gr-radar/include/radar/usrp_echotimer_cc.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1radar_1_1usrp__echotimer__cc_1ad44075270e4f4a7dca5f98f95662dde2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::radar::usrp_echotimer_cc::set_rx_gain</definition>
        <argsstring>(float gain)=0</argsstring>
        <name>set_rx_gain</name>
        <reimplementedby refid="classgr_1_1radar_1_1usrp__echotimer__cc__impl_1af8694db313cd74322876cf0a98601687">set_rx_gain</reimplementedby>
        <param>
          <type>float</type>
          <declname>gain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/parallels/gr-radar/include/radar/usrp_echotimer_cc.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classgr_1_1radar_1_1usrp__echotimer__cc_1aaaddeacf2db61e391ed2409766b868e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void gr::radar::usrp_echotimer_cc::set_tx_gain</definition>
        <argsstring>(float gain)=0</argsstring>
        <name>set_tx_gain</name>
        <reimplementedby refid="classgr_1_1radar_1_1usrp__echotimer__cc__impl_1a3fccc117093ead0b511907492d7a0f14">set_tx_gain</reimplementedby>
        <param>
          <type>float</type>
          <declname>gain</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/parallels/gr-radar/include/radar/usrp_echotimer_cc.h" line="57" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>&lt;+description of block+&gt; </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="404">
        <label>gr::radar::usrp_echotimer_cc_impl</label>
        <link refid="classgr_1_1radar_1_1usrp__echotimer__cc__impl"/>
        <childnode refid="402" relation="public-inheritance">
        </childnode>
      </node>
      <node id="403">
        <label>tagged_stream_block</label>
      </node>
      <node id="402">
        <label>gr::radar::usrp_echotimer_cc</label>
        <link refid="classgr_1_1radar_1_1usrp__echotimer__cc"/>
        <childnode refid="403" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="406">
        <label>tagged_stream_block</label>
      </node>
      <node id="405">
        <label>gr::radar::usrp_echotimer_cc</label>
        <link refid="classgr_1_1radar_1_1usrp__echotimer__cc"/>
        <childnode refid="406" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/parallels/gr-radar/include/radar/usrp_echotimer_cc.h" line="36" column="1" bodyfile="/home/parallels/gr-radar/include/radar/usrp_echotimer_cc.h" bodystart="35" bodyend="58"/>
    <listofallmembers>
      <member refid="classgr_1_1radar_1_1usrp__echotimer__cc_1af28724f82fe8b26282583d7c99f2c059" prot="public" virt="non-virtual"><scope>gr::radar::usrp_echotimer_cc</scope><name>make</name></member>
      <member refid="classgr_1_1radar_1_1usrp__echotimer__cc_1af029bf7193437c2d689058747eeb9230" prot="public" virt="pure-virtual"><scope>gr::radar::usrp_echotimer_cc</scope><name>set_num_delay_samps</name></member>
      <member refid="classgr_1_1radar_1_1usrp__echotimer__cc_1ad44075270e4f4a7dca5f98f95662dde2" prot="public" virt="pure-virtual"><scope>gr::radar::usrp_echotimer_cc</scope><name>set_rx_gain</name></member>
      <member refid="classgr_1_1radar_1_1usrp__echotimer__cc_1aaaddeacf2db61e391ed2409766b868e2" prot="public" virt="pure-virtual"><scope>gr::radar::usrp_echotimer_cc</scope><name>set_tx_gain</name></member>
      <member refid="classgr_1_1radar_1_1usrp__echotimer__cc_1aaa38e631afb34a7c84aedfa9a5c2f50f" prot="public" virt="non-virtual"><scope>gr::radar::usrp_echotimer_cc</scope><name>sptr</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
